{"version":3,"sources":["icons/sprout-logo.svg","Components/Header.js","Components/BookShelf.js","Components/BookShelfChanger.js","Components/Book.js","Components/SearchPageResults.js","Components/searchTerms.js","Components/SearchPage.js","Components/SearchButton.js","Components/BookShelfContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","shown","setIsShown","bind","assertThisInitialized","bool","setState","_this2","react_default","a","createElement","className","react_router_dom","to","src","sproutLogo","alt","index_esm","onMouseEnter","onMouseLeave","Component","BookShelf","props","shelf","title","toLowerCase","split","join","filteredBooks","booksMap","filter","book","length","BookShelfChanger","value","onChange","event","bookListHandler","id","bookShelfHandler","target","options","method","headers","Authorization","Content-Type","body","JSON","stringify","fetch","concat","catch","error","console","bookShelfAPIUpdater","disabled","Book","_this$props","image","authors","style","width","height","backgroundImage","Components_BookShelfChanger","SearchPageResults","foundBooks","searchTerms","SearchPage","onFocusHandler","closeListHandler","filterTerms","e","termsArray","userInput","filteredTerms","term","includes","userSearch","userInputHandler","input","getBooks","clickHandler","onFocus","type","placeholder","SearchPage_DataList","hideDivHandler","Components_SearchPageResults","DataList","_this3","wrapperRef","React","createRef","setWrapperRef","handleClickOutside","_this4","map","i","key","onClick","getAttribute","toString","document","addEventListener","removeEventListener","node","current","contains","ref","border","renderList","SearchButton","BookShelfContainer","validateSearch","searchTerm","trim","search","noBooks","splice","emptySearch","authHeader","query","maxResults","initURL","then","res","json","result","books","filterRes","arr1","arr2","el","find","element","searchResult","notResult","finalSearchResult","returnSearch","bookIndex","forEach","indexOf","addBook","arr","returnArr","arrbook","push","checkBooks","prevState","objectSpread","stateArray","Components_Book","imageLinks","smallThumbnail","shelves","react_router","exact","path","render","booksArray","Components_BookShelf","Components_SearchButton","Components_SearchPage","BooksApp","Components_Header","Components_BookShelfContainer","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.f4f46043.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprout-logo.512d9f3b.svg\";","import React, { Component } from \"react\";\nimport sproutLogo from \"../icons/sprout-logo.svg\";\nimport { BsQuestionCircle } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\n\n// Reference: Logo sourced from https://www.emojipng.com/preview/12429992\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      shown: false,\n    };\n    this.setIsShown = this.setIsShown.bind(this);\n  }\n\n  setIsShown(bool) {\n    this.setState({\n      shown: bool,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"list-books-title\">\n        <div className=\"nav-container\">\n          <div className=\"nav-title\">\n            <Link to=\"/\">\n              <h1>Book Sprout</h1>\n            </Link>\n            <p className=\"nav-subtitle\">Grow your knowledge</p>\n          </div>\n\n          <div className=\"sprout-logo\">\n            <img src={sproutLogo} alt=\"sprout logo\" />\n          </div>\n          <div className=\"question-icon-container\">\n            <BsQuestionCircle\n              onMouseEnter={() => this.setIsShown(true)}\n              onMouseLeave={() => this.setIsShown(false)}\n              className=\"question-icon\"\n            />\n            {this.state.shown && (\n              <div className=\"tool-tip tool-tip-anim\">\n                <span>Book Sprout</span> is a branded component built with the\n                Udacity MyReads API. To grow your reading list, use a searchable\n                term on the searchpage, find your book, and click the book shelf\n                changer button to add it to a category. Thanks to the API, state\n                persists across uses.\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react'\n\nconst BookShelf = (props) => {\n \n    const shelf = props.title.toLowerCase().split(\" \").join(\"\")\n    const filteredBooks = props.booksMap.filter(book => {\n        return book.props.shelf.toLowerCase() === shelf\n    })\n\n\n\n    return(\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                        {filteredBooks.length === 0 ? 'Add a book to this shelf' : filteredBooks}\n                </ol>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default BookShelf","import React from \"react\";\n// import {TiLeaf} from \"react-icons/ti\"\n\nconst BookShelfChanger = (props) => {\n  const bookShelfAPIUpdater = (shelf, id) => {\n    const options = {\n      method: \"PUT\",\n      headers: {\n        Authorization: \"JimmyAllDayWantsBooksData\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ shelf }),\n    };\n    fetch(`https://reactnd-books-api.udacity.com/books/${id}`, options).catch(\n      (error) => {\n        console.error(\"Error:\", error);\n      }\n    );\n  };\n\n  return (\n    <div className=\"book-shelf-changer\">\n      <select\n        value={props.shelf}\n        onChange={(event) => {\n          props.bookListHandler(props.id);\n          props.bookShelfHandler(event.target.value, props.id);\n          bookShelfAPIUpdater(event.target.value, props.id);\n        }}\n      >\n        <option value=\"move\" disabled>\n          Move to...\n        </option>\n        <option value=\"wantToRead\">Want to Read</option>\n        <option value=\"currentlyReading\">Currently Reading</option>\n        <option value=\"read\">Read</option>\n        <option value=\"none\">None</option>\n      </select>\n    </div>\n  );\n};\n\nexport default BookShelfChanger;\n","import React, {Component} from 'react'\nimport BookShelfChanger from './BookShelfChanger'\n\nclass Book extends Component {\n    constructor(props){\n                super()\n    }\n\n    render() {\n        \n        const {image, title, authors} = this.props\n        return ( \n                <li>\n                    <div className=\"book\">\n                        <div className=\"book-top\">\n                        <div className=\"book-cover\" \n                            style={{ \n                                width: 128, \n                                height: 193, \n                                backgroundImage: `url(\"${image}\")`\n                                }}\n                                ></div>\n                            <BookShelfChanger\n                                shelf={this.props.shelf}\n                                id={this.props.id} \n                                bookShelfHandler={this.props.bookShelfHandler}\n                                bookListHandler={this.props.bookListHandler}\n                                />\n                        </div>\n                        <div className=\"book-title\">{title}</div>\n                        <div className=\"book-authors\">{authors}</div>\n                    </div>\n                </li>\n            )\n        }\n}\n\nexport default Book","import React from \"react\";\n// import Book from './Book'\n\nconst SearchPageResults = (props) => {\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">{props.foundBooks}</ol>\n    </div>\n  );\n};\n\nexport default SearchPageResults;\n","const searchTerms = [\n  \"Android\",\n  \"Art\",\n  \"Artificial Intelligence\",\n  \"Astronomy\",\n  \"Austen\",\n  \"Baseball\",\n  \"Basketball\",\n  \"Bhagat\",\n  \"Biography\",\n  \"Brief\",\n  \"Business\",\n  \"Camus\",\n  \"Cervantes\",\n  \"Christie\",\n  \"Classics\",\n  \"Comics\",\n  \"Cook\",\n  \"Cricket\",\n  \"Cycling\",\n  \"Desai\",\n  \"Design\",\n  \"Development\",\n  \"Digital Marketing\",\n  \"Drama\",\n  \"Drawing\",\n  \"Dumas\",\n  \"Education\",\n  \"Everything\",\n  \"Fantasy\",\n  \"Film\",\n  \"Finance\",\n  \"First\",\n  \"Fitness\",\n  \"Football\",\n  \"Future\",\n  \"Games\",\n  \"Gandhi\",\n  \"Homer\",\n  \"Horror\",\n  \"Hugo\",\n  \"Ibsen\",\n  \"Javascript\",\n  \"Journey\",\n  \"Kafka\",\n  \"King\",\n  \"Lahiri\",\n  \"Larsson\",\n  \"Learn\",\n  \"Literary Fiction\",\n  \"Make\",\n  \"Manage\",\n  \"Marquez\",\n  \"Money\",\n  \"Mystery\",\n  \"Negotiate\",\n  \"Painting\",\n  \"Philosophy\",\n  \"Photography\",\n  \"Poetry\",\n  \"Production\",\n  \"Programming\",\n  \"React\",\n  \"Redux\",\n  \"River\",\n  \"Robotics\",\n  \"Rowling\",\n  \"Satire\",\n  \"Science Fiction\",\n  \"Shakespeare\",\n  \"Singh\",\n  \"Swimming\",\n  \"Tale\",\n  \"Thrun\",\n  \"Time\",\n  \"Tolstoy\",\n  \"Travel\",\n  \"Ultimate\",\n  \"Virtual Reality\",\n  \"Web Development\",\n  \"iOS\",\n];\n\nexport default searchTerms;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchPageResults from \"./SearchPageResults\";\nimport searchTerms from \"./searchTerms\";\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      shown: false,\n      searchTerms: searchTerms,\n      userSearch: searchTerms,\n    };\n    this.onFocusHandler = this.onFocusHandler.bind(this);\n    this.closeListHandler = this.closeListHandler.bind(this);\n    this.filterTerms = this.filterTerms.bind(this);\n    this.userInputHandler = this.userInputHandler.bind(this);\n  }\n\n  // Render datalist on focus\n  onFocusHandler = () => {\n    this.setState({ shown: true });\n  };\n\n  // Close datalist on click outside\n  closeListHandler = () => {\n    this.setState({ shown: false });\n  };\n\n  // filter datalist terms passed as props to datalist component\n  filterTerms = (e, termsArray) => {\n    const userInput = e.target.value.toLowerCase();\n    const filteredTerms = termsArray.filter((term) => {\n      return term.toLowerCase().includes(userInput);\n    });\n    return this.setState({ userSearch: filteredTerms });\n  };\n\n  // Update state on user input\n  userInputHandler = (input) => {\n    this.setState(\n      { userInput: input },\n      // Setstate callback\n      () => {\n        this.props.getBooks(this.state.userInput);\n      }\n    );\n  };\n\n  // Update state on list item click\n  clickHandler = (input) => {\n    this.setState(\n      {\n        userInput: input,\n        userSearch: [input],\n      },\n      // Setstate callback\n      () => {\n        this.props.getBooks(this.state.userInput);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <form>\n          <div\n            className=\"search-books\"\n            onFocus={() => this.onFocusHandler(this.state.searchTerms)}\n          >\n            <div className=\"search-books-bar\">\n              <Link to=\"/\">\n                <button className=\"close-search\">Close</button>\n              </Link>\n              <div className=\"search-books-input-wrapper\">\n                <input\n                  type=\"search\"\n                  placeholder=\"Enter search term\"\n                  value={this.state.userInput}\n                  onChange={(event) => {\n                    this.userInputHandler(event.target.value);\n                    this.filterTerms(event, this.state.searchTerms);\n                  }}\n                />\n              </div>\n            </div>\n            {this.state.shown && (\n              <DataList\n                className=\"datalist\"\n                searchTerms={this.state.userSearch}\n                clickHandler={this.clickHandler}\n                hideDivHandler={this.closeListHandler}\n              />\n            )}\n          </div>\n        </form>\n        <SearchPageResults\n          bookShelfHandler={this.props.bookShelfHandler}\n          bookListHandler={this.props.bookListHandler}\n          foundBooks={this.props.foundBooks}\n        />\n      </div>\n    );\n  }\n}\n\nclass DataList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.wrapperRef = React.createRef();\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  renderList() {\n    const dataArray = this.props.searchTerms.map((term, i) => {\n      return (\n        <div\n          key={i}\n          className=\"datalist-term\"\n          value={term}\n          onClick={(e) => {\n            this.props.clickHandler(e.target.getAttribute(\"value\").toString());\n            this.props.hideDivHandler();\n          }}\n        >\n          {term}\n        </div>\n      );\n    });\n    return dataArray;\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\n      this.props.hideDivHandler();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.wrapperRef}\n        className=\"search-datalist\"\n        style={{ border: \"black solid 1px\" }}\n      >\n        {this.renderList()}\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchButton = () => {\n  return (\n    <div className=\"open-search\">\n      <Link to=\"/search\">\n        <div className=\"search-button\">Add a book</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default SearchButton;\n","import React, {Component } from 'react'\nimport BookShelf from './BookShelf'\nimport Book from './Book'\nimport SearchPage from './SearchPage'\nimport SearchButton from './SearchButton'\nimport { Route } from 'react-router-dom'\n\n\nclass BookShelfContainer extends Component  {\n        constructor(){\n            super()\n            this.state = {\n                books: [],\n                search: '',\n                foundBooks: []\n            }\n            this.initURL = 'https://reactnd-books-api.udacity.com'\n            this.authHeader = 'JimmyAllDayWantsBooksData'\n            this.options = {\n                \"headers\": {\n                    Authorization: this.authHeader\n                }\n            }\n\n            this.getBooks = this.getBooks.bind(this)\n            this.bookShelfHandler = this.bookShelfHandler.bind(this)\n            this.bookListHandler = this.bookListHandler.bind(this)\n            this.validateSearch = this.validateSearch.bind(this)\n        }\n\n        componentDidMount() {\n            fetch(`${this.initURL}/books`, this.options)\n            .then(res => res.json())\n            .then(result => {\n                this.setState(() => ({\n                    books: result.books\n                }))\n            })\n        }\n\n        // Client side validation - not yet implemented\n        validateSearch = (searchTerm) =>{\n            searchTerm.trim()\n            searchTerm !== '' && (\n            this.setState(() =>({\n                search: searchTerm\n            }))\n            )\n        }\n\n        //  Searchpage API Call\n            // TODO: refactor\n        getBooks = (searchTerm) => {\n\n            const noBooks = this.state.foundBooks.splice(0, this.state.foundBooks.length)\n            const emptySearch =() =>{\n                this.setState({noBooks})\n            }\n\n            const returnSearch = (result) => {\n\n                // Reference: the below solution was derived from: https://www.tutorialspoint.com/filter-an-array-containing-objects-based-on-another-array-containing-objects-in-javascript\n                const filterRes = (arr1, arr2) =>{\n                let resArray = []\n                resArray = arr1.filter(el=>{\n                    return !arr2.find(element =>{\n                        return element.id === el.id\n                        })\n                    })\n                return resArray\n                }\n\n                const searchResult = filterRes(result, this.state.books)\n                const notResult = filterRes(this.state.books, result)\n                const concatResult = searchResult.concat(this.state.books)\n                const finalSearchResult = filterRes(concatResult, notResult)\n\n                this.setState(() => ({\n                    foundBooks: finalSearchResult\n                    })\n                )\n            }\n\n            const options = {\n                    method: 'POST',\n                    headers: {\n                    'Authorization': this.authHeader,\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({query: searchTerm, maxResults: 20 })\n                }\n\n            searchTerm !== '' && (      \n                fetch(`${this.initURL}/search`, options)\n                .then(res => res.json())\n                .then(result => {\n                        result.error || result.books.error || result.books === [] ?\n                        emptySearch() :\n                        returnSearch(result.books)\n                    }\n                )\n                .catch(null)\n            )\n\n            searchTerm === '' && (\n                emptySearch()\n            )            \n        }\n\n\n        bookListHandler = (id) => {\n\n            let bookIndex = null\n            this.state.foundBooks.forEach(book => {\n                if (book.id === id){\n                    bookIndex = this.state.foundBooks.indexOf(book)\n                }\n            })\n\n            const addBook = this.state.foundBooks.splice(bookIndex, 1)\n\n            //Check for duplicate books being pushed from search page\n            const checkBooks = (arr, book) => {\n                \n                    const returnArr = []\n                    if (book.length > 0 ){\n                        const id = book[0].id\n                        arr.forEach((arrbook, i)=> {\n                        return id === arrbook.id ?\n                        arr.splice(i,-1) : \n                        returnArr.push(arrbook)\n                    }) \n                } else {\n                    arr.forEach((book)=>{\n                        returnArr.push(book)\n                    })     \n                }\n\n                return returnArr.concat(book)\n            }\n\n            const books = checkBooks(this.state.books, addBook)\n\n\n            this.setState({books})\n            }\n\n        // Reference - the below solution was derived from https://knowledge.udacity.com/questions/216569\n        bookShelfHandler(event, id){\n                this.setState(prevState => ({\n                    books: prevState.books.map(book => {\n                        if (book.id === id){\n                                const newBook = { ...book, shelf: event}\n                                return newBook;\n                        }\n                        return book\n                    })\n                }))\n        }\n\n        render(){\n\n            const booksMap = (stateArray) => {   \n                const mappedBooks = stateArray.map(book => {\n                    return (<Book \n                        key={book.id}\n                        id={book.id} \n                        image={book.imageLinks ? book.imageLinks.smallThumbnail : null}\n                        title={book.title}\n                        authors={book.authors}\n                        shelf={book.shelf ? book.shelf : 'none'}\n                        bookShelfHandler={this.bookShelfHandler}\n                        bookListHandler={this.bookListHandler}\n                        />)\n                })\n                return mappedBooks\n            }\n\n            const shelves = [\n                'Want to Read', 'Currently Reading', 'Read'\n            ]\n\n            const shelvesMap = (booksArray, shelfArray) => {\n                const shelfMap = shelfArray.map((shelf)=>{\n                    return <BookShelf\n                                key={shelf}\n                                booksMap={booksArray}\n                                title={shelf}\n                    />\n                })\n                return shelfMap\n            }\n            \n        return(\n            <div className=\"bookshelf\">\n\n                <Route exact path='/' render={()=>(\n                    <div className=\"list-books-content\">\n                            {shelvesMap(booksMap(this.state.books), shelves)}\n                        <SearchButton/>\n                        </div>\n                    )\n                }/>\n\n                <Route path='/search' render={()=>(\n                        <SearchPage\n                            bookShelfHandler={this.bookShelfHandler}\n                            bookListHandler={this.bookListHandler}\n                            foundBooks={booksMap(this.state.foundBooks)}\n                            getBooks={this.getBooks}\n                        />\n                    )\n                }/>\n\n            </div>\n\n        )\n    }\n}\n\nexport default BookShelfContainer","import React from 'react'\nimport './App.css'\nimport Header from './Components/Header'\nimport BookShelfContainer from './Components/BookShelfContainer'\n\nclass BooksApp extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n         <div className=\"list-books\">\n            <Header/>\n            <BookShelfContainer/>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}