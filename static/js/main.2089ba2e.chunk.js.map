{"version":3,"sources":["icons/sprout-logo.svg","Components/Header.js","Components/BookShelf.js","Components/BookShelfChanger.js","Components/Book.js","Components/SearchPageResults.js","Components/SearchPage.js","Components/SearchButton.js","Components/BookShelfContainer.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","sproutLogo","alt","BookShelf","props","shelf","title","toLowerCase","split","join","filteredBooks","booksMap","filter","book","length","BookShelfChanger","value","onChange","event","bookListHandler","id","bookShelfHandler","target","options","method","headers","Authorization","Content-Type","body","JSON","stringify","fetch","concat","catch","error","console","bookShelfAPIUpdater","disabled","Book","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","image","authors","style","width","height","backgroundImage","Components_BookShelfChanger","Component","SearchPageResults","foundBooks","SearchPage","react_router_dom","to","type","placeholder","getBooks","Components_SearchPageResults","SearchButton","BookShelfContainer","_this","validateSearch","searchTerm","trim","setState","search","noBooks","state","splice","emptySearch","authHeader","query","maxResults","initURL","then","res","json","result","books","filterRes","arr1","arr2","el","find","element","searchResult","notResult","finalSearchResult","returnSearch","bookIndex","forEach","indexOf","addBook","arr","returnArr","arrbook","i","push","checkBooks","bind","assertThisInitialized","_this2","prevState","map","objectSpread","_this3","stateArray","Components_Book","key","imageLinks","smallThumbnail","shelves","react_router","exact","path","render","booksArray","Components_BookShelf","Components_SearchButton","Components_SearchPage","BooksApp","Components_Header","Components_BookShelfContainer","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2089ba2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprout-logo.512d9f3b.svg\";","import React from \"react\";\nimport sproutLogo from \"../icons/sprout-logo.svg\";\n// Reference: Logo sourced from https://www.emojipng.com/preview/12429992\n\nconst Header = () => {\n  return (\n    <div className=\"list-books-title\">\n      <div className=\"nav-container\">\n        <div className=\"nav-title\">\n          <h1>Book Sprout</h1>\n          <p className=\"nav-subtitle\">Grow your reading</p>\n        </div>\n        <div className=\"sprout-logo\">\n          <img src={sproutLogo} alt=\"sprout logo\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react'\n\nconst BookShelf = (props) => {\n \n    const shelf = props.title.toLowerCase().split(\" \").join(\"\")\n    const filteredBooks = props.booksMap.filter(book => {\n        return book.props.shelf.toLowerCase() === shelf\n    })\n\n\n\n    return(\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                        {filteredBooks.length === 0 ? 'Add a book to this shelf' : filteredBooks}\n                </ol>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default BookShelf","import React from 'react'\n\nconst BookShelfChanger = (props) => {\n\n        const bookShelfAPIUpdater = (shelf, id) => {\n            const options = {\n                    method: 'PUT',\n                    headers: {\n                    'Authorization': 'JimmyAllDayWantsBooksData',\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({shelf})\n                }\n                fetch(`https://reactnd-books-api.udacity.com/books/${id}`, options)\n                .catch(error =>{\n                    console.error('Error:', error)\n                })\n        }\n\n        return (\n\n            <div className=\"book-shelf-changer\">\n                <select value={props.shelf} onChange={(event) => {\n                            props.bookListHandler(props.id)\n                            props.bookShelfHandler(event.target.value, props.id)\n                            bookShelfAPIUpdater(event.target.value, props.id)\n                        }\n                    }>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"currentlyReading\">Currently Reading</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                </select>\n            </div>\n        )\n}\n\nexport default BookShelfChanger","import React, {Component} from 'react'\nimport BookShelfChanger from './BookShelfChanger'\n\nclass Book extends Component {\n    constructor(props){\n                super()\n    }\n\n    render() {\n        \n        const {image, title, authors} = this.props\n        return ( \n                <li>\n                    <div className=\"book\">\n                        <div className=\"book-top\">\n                        <div className=\"book-cover\" \n                            style={{ \n                                width: 128, \n                                height: 193, \n                                backgroundImage: `url(\"${image}\")`\n                                }}\n                                ></div>\n                            <BookShelfChanger\n                                shelf={this.props.shelf}\n                                id={this.props.id} \n                                bookShelfHandler={this.props.bookShelfHandler}\n                                bookListHandler={this.props.bookListHandler}\n                                />\n                        </div>\n                        <div className=\"book-title\">{title}</div>\n                        <div className=\"book-authors\">{authors}</div>\n                    </div>\n                </li>\n            )\n        }\n}\n\nexport default Book","import React from 'react'\n// import Book from './Book'\n\nconst SearchPageResults = (props) => {\n\n    return (\n        <div className=\"search-books-results\">\n        <ol className=\"books-grid\">{props.foundBooks}</ol>\n      </div>\n    )\n\n}\n\nexport default SearchPageResults","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchPageResults from \"./SearchPageResults\";\n\nconst SearchPage = (props) => {\n  return (\n    <div>\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to=\"/\">\n            <button className=\"close-search\">Close</button>\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              type=\"search\"\n              placeholder=\"Search by title or author\"\n              onChange={(event) => {\n                props.getBooks(event.target.value);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <SearchPageResults\n        bookShelfHandler={props.bookShelfHandler}\n        bookListHandler={props.bookListHandler}\n        foundBooks={props.foundBooks}\n      />\n    </div>\n  );\n};\n\nexport default SearchPage;\n\n//TODO: Add https://www.npmjs.com/package/react-datalist-input and use this to populate a list of searchable terms when the user enters input\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SearchButton = () => {\n\n    return (\n        <div className=\"open-search\">\n            <Link to=\"/search\">\n                <button>Add a book</button>\n            </Link>\n        </div>\n    )\n}\n\nexport default SearchButton","import React, {Component } from 'react'\nimport BookShelf from './BookShelf'\nimport Book from './Book'\nimport SearchPage from './SearchPage'\nimport SearchButton from './SearchButton'\nimport { Route } from 'react-router-dom'\n\n\nclass BookShelfContainer extends Component  {\n        constructor(){\n            super()\n            this.state = {\n                books: [],\n                search: '',\n                foundBooks: []\n            }\n            this.initURL = 'https://reactnd-books-api.udacity.com'\n            this.authHeader = 'JimmyAllDayWantsBooksData'\n            this.options = {\n                \"headers\": {\n                    Authorization: this.authHeader\n                }\n            }\n\n            this.getBooks = this.getBooks.bind(this)\n            this.bookShelfHandler = this.bookShelfHandler.bind(this)\n            this.bookListHandler = this.bookListHandler.bind(this)\n            this.validateSearch = this.validateSearch.bind(this)\n        }\n\n        componentDidMount() {\n            fetch(`${this.initURL}/books`, this.options)\n            .then(res => res.json())\n            .then(result => {\n                this.setState(() => ({\n                    books: result.books\n                }))\n            })\n        }\n\n        // Client side validation - not yet implemented\n        validateSearch = (searchTerm) =>{\n            searchTerm.trim()\n            searchTerm !== '' && (\n            this.setState(() =>({\n                search: searchTerm\n            }))\n            )\n        }\n\n        //  Searchpage API Call\n            // TODO: refactor\n        getBooks = (searchTerm) => {\n\n            const noBooks = this.state.foundBooks.splice(0, this.state.foundBooks.length)\n            const emptySearch =() =>{\n                this.setState({noBooks})\n            }\n\n            const returnSearch = (result) => {\n\n                // Reference: the below solution was derived from: https://www.tutorialspoint.com/filter-an-array-containing-objects-based-on-another-array-containing-objects-in-javascript\n                const filterRes = (arr1, arr2) =>{\n                let resArray = []\n                resArray = arr1.filter(el=>{\n                    return !arr2.find(element =>{\n                        return element.id === el.id\n                        })\n                    })\n                return resArray\n                }\n\n                const searchResult = filterRes(result, this.state.books)\n                const notResult = filterRes(this.state.books, result)\n                const concatResult = searchResult.concat(this.state.books)\n                const finalSearchResult = filterRes(concatResult, notResult)\n\n                this.setState(() => ({\n                    foundBooks: finalSearchResult\n                    })\n                )\n            }\n\n            const options = {\n                    method: 'POST',\n                    headers: {\n                    'Authorization': this.authHeader,\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({query: searchTerm, maxResults: 20 })\n                }\n\n            searchTerm !== '' && (      \n                fetch(`${this.initURL}/search`, options)\n                .then(res => res.json())\n                .then(result => {\n                        result.error || result.books.error || result.books === [] ?\n                        emptySearch() :\n                        returnSearch(result.books)\n                    }\n                )\n                .catch(null)\n            )\n\n            searchTerm === '' && (\n                emptySearch()\n            )            \n        }\n\n\n        bookListHandler = (id) => {\n\n            let bookIndex = null\n            this.state.foundBooks.forEach(book => {\n                if (book.id === id){\n                    bookIndex = this.state.foundBooks.indexOf(book)\n                }\n            })\n\n            const addBook = this.state.foundBooks.splice(bookIndex, 1)\n\n            //Check for duplicate books being pushed from search page\n            const checkBooks = (arr, book) => {\n                \n                    const returnArr = []\n                    if (book.length > 0 ){\n                        const id = book[0].id\n                        arr.forEach((arrbook, i)=> {\n                        return id === arrbook.id ?\n                        arr.splice(i,-1) : \n                        returnArr.push(arrbook)\n                    }) \n                } else {\n                    arr.forEach((book)=>{\n                        returnArr.push(book)\n                    })     \n                }\n\n                return returnArr.concat(book)\n            }\n\n            const books = checkBooks(this.state.books, addBook)\n\n\n            this.setState({books})\n            }\n\n        // Reference - the below solution was derived from https://knowledge.udacity.com/questions/216569\n        bookShelfHandler(event, id){\n                this.setState(prevState => ({\n                    books: prevState.books.map(book => {\n                        if (book.id === id){\n                                const newBook = { ...book, shelf: event}\n                                return newBook;\n                        }\n                        return book\n                    })\n                }))\n        }\n\n        render(){\n\n            const booksMap = (stateArray) => {   \n                const mappedBooks = stateArray.map(book => {\n                    return (<Book \n                        key={book.id}\n                        id={book.id} \n                        image={book.imageLinks ? book.imageLinks.smallThumbnail : null}\n                        title={book.title}\n                        authors={book.authors}\n                        shelf={book.shelf ? book.shelf : 'none'}\n                        bookShelfHandler={this.bookShelfHandler}\n                        bookListHandler={this.bookListHandler}\n                        />)\n                })\n                return mappedBooks\n            }\n\n            const shelves = [\n                'Want to Read', 'Currently Reading', 'Read'\n            ]\n\n            const shelvesMap = (booksArray, shelfArray) => {\n                const shelfMap = shelfArray.map((shelf)=>{\n                    return <BookShelf\n                                key={shelf}\n                                booksMap={booksArray}\n                                title={shelf}\n                    />\n                })\n                return shelfMap\n            }\n            \n        return(\n            <div className=\"bookshelf\">\n\n                <Route exact path='/' render={()=>(\n                    <div className=\"list-books-content\">\n                            {shelvesMap(booksMap(this.state.books), shelves)}\n                        <SearchButton/>\n                        </div>\n                    )\n                }/>\n\n                <Route path='/search' render={()=>(\n                        <SearchPage\n                            bookShelfHandler={this.bookShelfHandler}\n                            bookListHandler={this.bookListHandler}\n                            foundBooks={booksMap(this.state.foundBooks)}\n                            getBooks={this.getBooks}\n                        />\n                    )\n                }/>\n\n            </div>\n\n        )\n    }\n}\n\nexport default BookShelfContainer","import React from 'react'\nimport './App.css'\nimport Header from './Components/Header'\nimport BookShelfContainer from './Components/BookShelfContainer'\n\nclass BooksApp extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n         <div className=\"list-books\">\n            <Header/>\n            <BookShelfContainer/>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n\n<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}